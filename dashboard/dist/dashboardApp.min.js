/**
 * ptAnywhere.dashboard - A dashboard to analyse PT Anywhere usage.
 * @version v2.5.3
 * @link http://pt-anywhere.kmi.open.ac.uk
 */
function Listener(){this.callbacks={deviceCreation:null,deviceRemoval:null,deviceUpdate:null,linkCreation:null,linkRemoval:null,openCmd:null,closeCmd:null,useCmd:null,readCmd:null}}angular.module("ptAnywhere.dashboard",[]).config(["$injector","$provide",function(e,t){var n={baseUrl:""};for(var a in n)try{e.get(a)}catch(s){console.log('Setting default value for non existing "baseUrl" constant: "'+n[a]+'"'),t.constant(a,n[a])}}]),angular.module("ptAnywhere.dashboard").filter("simpleUuid",[function(){function e(e){for(var t=e.toString(),n="",a=0;a<t.length;a+=2)n+=String.fromCharCode(parseInt(t.substr(a,2),16));return n}return function(t){var n=t.replace(/-/g,""),a=btoa(e(n));return a.replace(/\+/g,".").replace(/\//g,"_").replace(/=/g,"-")}}]).filter("momentDate",[function(){return function(e,t){return e.format(t)}}]),angular.module("ptAnywhere.dashboard").factory("UrlUtils",[function(){return{serialize:function(e){var t="";for(var n in e)t+=n+"="+e[n]+"&";return""!==t&&(t="?"+t.substring(0,t.length-1)),t}}}]).factory("SessionsService",["$q","$http","baseUrl",function(e,t,n){return{list:function(e){return t.get(n+"/a/data/sessions",{params:e})},getSessionCount:function(e){return t.get(n+"/a/data/sessions/counter",{params:e})},getActivityVolumePerSession:function(e){return t.get(n+"/a/data/sessions/perStatements",{params:e})},getSessionsForScatterplot:function(e){return t.get(n+"/a/data/sessions/scatterplot",{params:e})},getSessionsUsageStates:function(e){return t.get(n+"/a/data/usage",{params:e})},getSessionUsageStates:function(a){var s=[t.get(n+"/a/data/usage/"+a+"/passed"),t.get(n+"/a/data/usage/"+a)];return e.all(s).then(function(e){var t=e[1].data,n=e[0].data.passed?"pass":"fail",a=t.levels[t.levels.length-1][0].to,s=[{from:a,to:n,value:1,title:"1 session"}];return t.levels.push(s),t})},getStatements:function(e){return t.get(n+"/a/data/sessions/"+e)}}}]),angular.module("ptAnywhere.dashboard.search",["ae-datetimepicker","ptAnywhere.dashboard","ptAnywhere.dashboard.templates"]).controller("SearchController",["$window","TimeCache","SessionsService","UrlUtils",function(e,t,n,a){function s(){var e=o.startTime.toISOString(),n=o.endTime.toISOString(),a={start:e,end:n};return t.store(e,n),a}function i(){var e=s();return e.minStatements=o.actionsNum,e.containsCommand=o.containsCommand,e}var o=this,r="YYYY/MM/DD HH:mm";o.startTime=t.getDefaultStart(),o.endTime=t.getDefaultEnd(),o.startTimeOptions={format:r},o.endTimeOptions={format:r,minDate:moment(o.startTime).add(1,"hours")},o.actionsNum=1,o.containsCommand="",o.sessions=[],o.getUrlParams=function(){return a.serialize(i())},o.startTimeUpdate=function(){o.endTimeOptions.minDate=moment(o.startTime).add(1,"hours"),o.endTime<o.endTimeOptions.minDate&&(o.endTime=o.endTimeOptions.minDate)},o.list=function(){n.list(i()).then(function(e){o.sessions=e.data},function(e){console.error(e)})},o.showStatesChart=function(){e.location.href="summary.html#/usage"+o.getUrlParams()},o.showSessionsStartedHistogram=function(){e.location.href="summary.html#/started"+o.getUrlParams()},o.showInteractionCountingHistogram=function(){e.location.href="summary.html#/activity"+o.getUrlParams()},o.showInteractionCountingScatterplot=function(){e.location.href="summary.html#/scatterplot"+o.getUrlParams()}}]),angular.module("ptAnywhere.dashboard.search").factory("TimeCache",[function(){return{getDefaultStart:function(){var e=localStorage.getItem("startISO");return null===e?moment().startOf("day"):moment(e)},getDefaultEnd:function(){var e=localStorage.getItem("endISO");return null===e?moment().endOf("day"):moment(e)},store:function(e,t){localStorage.setItem("startISO",e),localStorage.setItem("endISO",t)}}}]),angular.module("ptAnywhere.dashboard.session",["ngRoute","ptAnywhere.dashboard","ptAnywhere.dashboard.templates","ptAnywhere.dashboard.stateDiagram"]).constant("ROUTES",{script:{name:"Session script",path:"/script"},states:{name:"States diagram",path:"/steps"},replayer:{name:"Replayer",url:"sessions/{id}/replayer.html"}}).config(["$routeProvider","ROUTES",function(e,t){e.when(t.script.path,{templateUrl:"session-script.html"}).when(t.states.path,{templateUrl:"session-steps.html"}).otherwise({redirectTo:t.script.path})}]),angular.module("ptAnywhere.dashboard.session").controller("ScriptController",["SessionsService","$routeParams",function(e,t){var n=this;n.statements=null,e.getStatements(t.id).then(function(e){n.statements=e.data.statements},function(e){console.error(e)})}]),angular.module("ptAnywhere.dashboard.session").directive("sessionScript",["StatementListener",function(e){function t(){return i.css("display","block")}function n(){return i.css("display","none")}function a(e){var t=angular.element(e);s.append(t)}var s,i;return{restrict:"C",template:'<ol></ol><div class="loader">Loading...</div>',scope:{statements:"="},link:function(o,r,l){s=r.find("ol"),i=r.find("div");var d=0;e.onCreateDevice(function(e){a("<li>Creating "+e[extension.device.name]+"</li>")}).onCreateLink(function(e){var t=e[extension.endpoints];a("<li>Connecting "+t[0].device+" and "+t[1].device+"</li>")}).onDeleteDevice(function(e){a("<li>Deleting "+e[extension.device.name]+"</li>")}).onDeleteLink(function(e){var t=e[extension.endpoints];a("<li>Disconnecting "+t[0].device+" and "+t[1].device+"</li>")}).onUpdateDevice(function(e){a("<li>Updating "+e[extension.device.name]+"</li>")}).onUpdatePort(function(e){a("<li>Updating "+e[extension.device.name]+"'s port: "+e[extension.port.name]+"</li>")}).onOpenCommandLine(function(e){d++;var t="collapsedSession"+d,n='<li><a data-target="#'+t+'" data-toggle="collapse" aria-expanded="false" aria-controls="'+t+'">Using '+e+'</a><div id="'+t+'" class="collapse"><div class="well"></div></div></li>';a(n)}).onCloseCommandLine(function(){}).onUseCommandLine(function(e){}).onReadCommandLine(function(e){var t="collapsedSession"+d,n=r.find("#"+t+" .well");n.append(e)}),o.$watch("statements",function(a,s){if(null===a)t();else{n();for(var i=0;i<a.length;i++)e.onStatement(a[i])}})}}}]),angular.module("ptAnywhere.dashboard.session").controller("SessionController",["$routeParams","$scope","ROUTES","UrlUtils",function(e,t,n,a){function s(t){var n=[],s=a.serialize(e);for(var o in t){console.log(s);var r="url"in t[o]?t[o].url.replace("{id}",i.uiid):"#"+t[o].path+s;n.push({name:t[o].name,url:r})}return n}var i=this;i.uiid="id",i.visualizations=[],t.$on("$routeChangeSuccess",function(){i.uiid=e.id,i.visualizations=s(n)})}]),String.prototype.startsWith=function(e){return 0===this.indexOf(e,0)},Listener.prototype.onCreateDevice=function(e){return this.callbacks.deviceCreation=e,this},Listener.prototype.onDeleteDevice=function(e){return this.callbacks.deviceRemoval=e,this},Listener.prototype.onUpdateDevice=function(e){return this.callbacks.deviceUpdate=e,this},Listener.prototype.onUpdatePort=function(e){return this.callbacks.portUpdate=e,this},Listener.prototype.onCreateLink=function(e){return this.callbacks.linkCreation=e,this},Listener.prototype.onDeleteLink=function(e){return this.callbacks.linkRemoval=e,this},Listener.prototype.onOpenCommandLine=function(e){return this.callbacks.openCmd=e,this},Listener.prototype.onCloseCommandLine=function(e){return this.callbacks.closeCmd=e,this},Listener.prototype.onUseCommandLine=function(e){return this.callbacks.useCmd=e,this},Listener.prototype.onReadCommandLine=function(e){return this.callbacks.readCmd=e,this},Listener.prototype.onStatement=function(e){var t=void 0===e.result?null:e.result.extensions;e.verb.id===verb.create?e.object.id.startsWith(devices.any)?null===this.callbacks.deviceCreation?console.warn("No callback function defined for device creation."):this.callbacks.deviceCreation(t):e.object.id===activity.link&&(null===this.callbacks.linkCreation?console.warn("No callback function defined for link creation."):this.callbacks.linkCreation(t)):e.verb.id===verb["delete"]?e.object.id.startsWith(devices.any)?null===this.callbacks.deviceRemoval?console.warn("No callback function defined for device removal."):this.callbacks.deviceRemoval(t):e.object.id===activity.link&&(null===this.callbacks.linkRemoval?console.warn("No callback function defined for link removal."):this.callbacks.linkRemoval(t)):e.verb.id===verb.update?e.object.id.startsWith(devices.any)?null===this.callbacks.deviceUpdate?console.warn("No callback function defined for device update."):this.callbacks.deviceUpdate(t,e.result.response):e.object.definition.type===activity.port&&(null===this.callbacks.portUpdate?console.warn("No callback function defined for device port update."):this.callbacks.portUpdate(t)):e.verb.id===verb.opened?e.object.definition.type===activity.commandLine&&(null===this.callbacks.openCmd?console.warn("No callback function defined for command line open."):this.callbacks.openCmd(e.object.definition.name["en-GB"])):e.verb.id===verb.closed?e.object.definition.type===activity.commandLine&&(null===this.callbacks.closeCmd?console.warn("No callback function defined for command line close."):this.callbacks.closeCmd()):e.verb.id===verb.use?e.object.definition.type===activity.commandLine&&(null===this.callbacks.useCmd?console.warn("No callback function defined for command line use."):this.callbacks.useCmd(t)):e.verb.id===verb.read&&e.object.definition.type===activity.commandLine&&(null===this.callbacks.readCmd?console.warn("No callback function defined for command line read."):this.callbacks.readCmd(e.result.response))},angular.module("ptAnywhere.dashboard.session").service("StatementListener",[Listener]),angular.module("ptAnywhere.dashboard.session").controller("UsageStatesController",["$scope","$timeout","$routeParams","SessionsService",function(e,t,n,a){var s=this;s.selectedLevels=0,s.slidedLevels=0,s.maxLevels=0,s.data={states:null,levels:null},s.onSlide=function(t){s.slidedLevels=t,e.$apply()},a.getSessionUsageStates(n.id).then(function(n){s.data=n,t(function(){s.maxLevels=s.data.levels.length-1,e.$apply()}).then(function(){s.selectedLevels=s.maxLevels>=3?3:s.maxLevels,s.slidedLevels=s.selectedLevels})},function(e){console.error(e)})}]),angular.module("ptAnywhere.dashboard.stateDiagram",[]),angular.module("ptAnywhere.dashboard.stateDiagram").factory("DiagramHelperService",["$q","$timeout",function(e,t){function n(){for(var e="0123456789abcdef".split(""),t="#",n=0;n<6;n++)t+=e[Math.floor(16*Math.random())];return t}function a(e){var t=[{group:0,id:"init",label:"init",x:c*(e.states.length-1)/2,y:0}],n=e.levels.length;if(p){var a=n;n=a-1,t.push({group:a,id:"pass",label:"pass",x:c*(e.states.length-1)/3,y:c*a}),t.push({group:a,id:"fail",label:"fail",x:2*c*(e.states.length-1)/3,y:c*a})}for(var s=0;s<n;s++)for(var i=0;i<e.states.length;i++)t.push({group:s+1,id:String(s)+":"+String(i),label:e.states[i],x:c*i,y:c*(s+1)});return t}function s(e){for(var t=[],n=0;n<e.length;n++)for(var a=0;a<e[n].length;a++)e[n][a].group=n,t.push(e[n][a]);return t}function i(e){for(var t={},a=0;a<e+2;a++){var s=n();t[String(a)]={color:{border:s,background:s,highlight:{border:s,background:"#ffffff"}}}}return t}function o(){var e=c/10;return{nodes:{shape:"dot",size:e,font:{face:"Tahoma"}},edges:{width:.1,hoverWidth:.2,smooth:{type:"continuous"},arrows:{to:{scaleFactor:.2}}},interaction:{dragNodes:!1},physics:{enabled:!1},groups:i(m)}}function r(e){return e.group<v+1||v+1===m&&p}function l(){d.setData({nodes:u.get({filter:r}),edges:h.get({filter:r})}),d.fit()}var d,c=100,u=new vis.DataSet,h=new vis.DataSet,m=3,v=3,p=!1;return{init:function(e,t){"undefined"!=typeof p&&(p=t),m=0,v=m;var n={nodes:[],edges:[]};d=new vis.Network(e,n,o())},_setFinalStateDisplayed:function(e){p=e},_getRandomColor:n,_createStates:a,_createEdges:s,update:function(e){return u.clear(),h.clear(),m=e.levels.length,d.setOptions(o()),t(function(){u.add(a(e))}).then(function(){return t(function(){h.add(s(e.levels))}).then(function(){l()})})},display:function(e){v=e,l()}}}]),angular.module("ptAnywhere.dashboard.stateDiagram").directive("slider",[function(){function e(e){if(e>1){var n=t.noUiSlider.get();t.noUiSlider.updateOptions({range:{min:1,max:e}}),n>e&&t.noUiSlider.set(e),t.removeAttribute("disabled")}else t.setAttribute("disabled",!0)}var t;return{restrict:"C",require:"ngModel",scope:{rangeMax:"=",onSlide:"&"},link:function(n,a,s,i){t=a[0],noUiSlider.create(t,{start:0,connect:"lower",step:1,range:{min:0,max:1},format:{to:function(e){return e},from:function(e){return e}}}),t.removeAttribute("disabled"),n.$watch("rangeMax",function(t,n){e(t)}),t.noUiSlider.on("slide",function(e){n.onSlide({value:Math.round(e[0])})}),t.noUiSlider.on("change",function(e){n.$apply(function(){i.$setViewValue(e[0])})}),i.$render=function(){t.noUiSlider.set(i.$viewValue)}}}}]),angular.module("ptAnywhere.dashboard.stateDiagram").directive("stateDiagram",["DiagramHelperService",function(e){function t(e){return e.children().hasClass("loader")}return{restrict:"C",template:'<div><div class="loader">Loading...</div></div>',scope:{data:"=",levelsToShow:"=",finalDisplayed:"@"},link:function(n,a,s){n.$watch("data",function(s,i){if(null!==s.states&&null!==s.levels){var o=a.find("div");t(o)&&e.init(o[0],"true"===n.finalDisplayed),e.update(s)}}),n.$watch("levelsToShow",function(t,n){t>0&&e.display(t)})}}}]),angular.module("ptAnywhere.dashboard.summary",["ngRoute","ptAnywhere.dashboard","ptAnywhere.dashboard.templates","ptAnywhere.dashboard.stateDiagram"]).constant("ROUTES",{steps:{name:"Usage steps",path:"/usage"},started:{name:"Sessions started",path:"/started"},activity_count:{name:"Activity count",path:"/activity"},activity_scatterplot:{name:"Activity volume over time",path:"/scatterplot"}}).config(["$routeProvider","ROUTES",function(e,t){e.when(t.steps.path,{templateUrl:"usage-steps.html"}).when(t.started.path,{templateUrl:"sessions-started.html"}).when(t.activity_count.path,{templateUrl:"activities-count.html"}).when(t.activity_scatterplot.path,{templateUrl:"activities-scatterplot.html"}).otherwise({redirectTo:t.started.path}),Chart.defaults.global.elements.line.backgroundColor="rgba(151,187,205,0.8)",Chart.defaults.global.elements.rectangle.backgroundColor="rgba(151,187,205,0.7)",Chart.defaults.global.legend.display=!1}]),angular.module("ptAnywhere.dashboard.summary").controller("ActivityCountController",["$routeParams","SessionsService",function(e,t){function n(e){for(var t=[],n=1;n<=e;n++)t.push(n);return t}function a(e){return{labels:n(e.length),datasets:[{label:"Sessions with this amount of activities",data:e}]}}var s=this;s.data=null,t.getActivityVolumePerSession(e).then(function(e){s.data=a(e.data)},function(e){console.error(e)})}]),angular.module("ptAnywhere.dashboard.summary").controller("ActivityScatterplotController",["$routeParams","SessionsService",function(e,t){var n=this;n.sessions=null,n.options={sort:!1,sampling:!1,style:"points",dataAxis:{showMinorLabels:!1,left:{title:{text:"Number of interactions"}},right:{title:{text:"Session starting time"}}},drawPoints:{enabled:!0,size:6,style:"circle"},defaultGroup:"Scatterplot"},t.getSessionsForScatterplot(e).then(function(e){for(var t=e.data,a=0;a<t.length;a++)t[a].x=moment(t[a].x);n.sessions=t},function(e){console.error(e)})}]),angular.module("ptAnywhere.dashboard.summary").directive("barChart",[function(){return{restrict:"C",template:'<div ng-show="chartData === null"><div class="loader">Loading...</div></div><canvas style="width: 100%; height: 400px;"></canvas>',scope:{chartData:"="},link:function(e,t,n){e.$watch("chartData",function(n,a){if(null!==n){var s=t.find("canvas")[0].getContext("2d");e.chart=new Chart(s,{type:"bar",data:e.chartData,options:{barPercentage:1}})}}),e.$on("$destroy",function(){e.chart.destroy()})}}}]),angular.module("ptAnywhere.dashboard").directive("scatterplot",[function(){return{restrict:"C",template:'<div class="loader">Loading...</div>',scope:{data:"=",options:"="},link:function(e,t,n){e.chart=null,e.$watch("data",function(n,a){if(null!==n){var s=angular.element('<div class="scatter"></div>')[0],i=new vis.DataSet(n);e.chart=new vis.Graph2d(s,i,e.options),t.replaceWith(s)}}),e.$on("$destroy",function(){null!==e.chart&&e.chart.destroy()})}}}]),angular.module("ptAnywhere.dashboard.summary").controller("SessionsStartedController",["$routeParams","SessionsService",function(e,t){function n(e,t){for(var n=[],a=0;a<t;a++)n.push(e.format("MM/DD/YYYY HH")),e.add(1,"hours");return n}function a(e,t){return{labels:n(e,t.length),datasets:[{label:"Sessions started",data:t}]}}var s=this;s.data=null,t.getSessionCount(e).then(function(e){s.data=a(moment(e.data.start),e.data.values)},function(e){console.error(e)})}]),angular.module("ptAnywhere.dashboard.summary").controller("SummaryController",["$routeParams","$scope","ROUTES","UrlUtils",function(e,t,n,a){function s(e,t){var n=[];for(var a in e)n.push({name:e[a].name,url:"#"+e[a].path+t});return n}var i=this;t.$on("$routeChangeSuccess",function(){var t=a.serialize(e);i.charts=s(n,t)})}]),angular.module("ptAnywhere.dashboard.summary").controller("UsageStatesController",["$scope","$timeout","$routeParams","SessionsService",function(e,t,n,a){var s=this;s.maxLevels=0,s.selectedLevels=0,s.slidedLevels=0,s.data={states:null,levels:null},s.onSlide=function(t){s.slidedLevels=t,e.$apply()},a.getSessionsUsageStates(n).then(function(n){s.data=n.data,t(function(){s.maxLevels=s.data.levels.length,e.$apply()}).then(function(){s.selectedLevels=s.maxLevels>=3?3:s.maxLevels,s.slidedLevels=s.selectedLevels})},function(e){console.error(e)})}]),angular.module("ptAnywhere.dashboard.templates",[]),angular.module("ptAnywhere.dashboard.summary.ibook",["ngRoute","ptAnywhere.dashboard","ptAnywhere.dashboard.templates","ptAnywhere.dashboard.stateDiagram"]),angular.module("ptAnywhere.dashboard.summary.ibook").controller("StaticUsageStatesController",["$scope","$timeout","SessionsService",function(e,t,n){var a=this;a.selectedLevels=0,a.slidedLevels=0,a.maxLevels=0,a.data={states:null,levels:null},a.onSlide=function(t){a.slidedLevels=t,e.$apply()},n.getSessionsUsageStates({start:"2016-01-27T20:00:00.000Z",end:"2016-01-29T23:00:00.000Z",minStatements:1}).then(function(n){a.data=n.data,t(function(){a.maxLevels=a.data.levels.length,a.maxLevels>20&&(a.maxLevels=20),e.$apply()}).then(function(){a.selectedLevels=a.maxLevels>=3?3:a.maxLevels,a.slidedLevels=a.selectedLevels})},function(e){console.error(e)})}]),angular.module("ptAnywhere.dashboard.templates").run(["$templateCache",function(e){e.put("activities-count.html",'<div ng-controller="ActivityCountController as started">\n    <h1>Number of activities per session</h1>\n\n    <div class="row">\n        <div class="col-md-12">\n            <div class="barChart" chart-data="started.data"></div>\n        </div>\n    </div>\n</div>'),e.put("activities-scatterplot.html",'<div ng-controller="ActivityScatterplotController as scatter">\n    <h1>Sessions per number of activities and time</h1>\n\n    <div class="row">\n        <div class="col-md-12">\n            <div class="scatterplot loader-container" data="scatter.sessions" options="scatter.options"></div>\n        </div>\n    </div>\n\n    <div class="row" style="margin-top: 30px;" ng-show="scatter.sessions !== null">\n        <div class="col-md-12">\n            <table class="table">\n                <thead>\n                <th>Session</th><th>Started at</th><th>Number of interactions</th>\n                </thead>\n                <tbody>\n                    <tr ng-repeat="session in scatter.sessions">\n                        <td><a href="session.html#/script?id={{session.label}}">{{session.label | simpleUuid}}</a></td>\n                        <td>{{session.x | momentDate: \'LLL\'}}</td>\n                        <td>{{session.y}}</td>\n                    </tr>\n                    <tr ng-if="scatter.sessions.length === 0">\n                        <td colspan="3">No sessions recorded during the specified period.</td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>\n</div>\n</div>'),e.put("session-script.html",'<div ng-controller="ScriptController as script">\n    <div class="container">\n        <h1>Session script</h1>\n\n        <div class="row" style="margin: 20px 0;">\n            <div class="col-md-12">\n                <div class="sessionScript loader-container" statements="script.statements"></div>\n            </div>\n        </div>\n    </div>\n</div>'),e.put("session-steps.html",'<div ng-controller="UsageStatesController as usage">\n    <h1>PT Anywhere usage summary</h1>\n\n    <div class="row">\n        <div class="col-md-12" style="margin-top: 20px;">\n            <p>Number of levels shown in the chart: <span ng-bind="usage.slidedLevels"></span>.</p>\n\n            <div class="slider" ng-model="usage.selectedLevels" range-max="usage.maxLevels" on-slide="usage.onSlide(value)"></div>\n\n            <p>Notes to interpret the chart:</p>\n            <ul>\n                <li>If a session has more than <span ng-bind="usage.slidedLevels"></span> steps, the remaining ones will not be displayed.</li>\n                <li>For the sake of simplicity, the states have not been subdivided to consider the type of devices created, deleted or modified.</li>\n                <li ng-show="usage.slidedLevels == usage.maxLevels">\n                    The final state is based on the solution for the experimentation session carried out in January.\n                    Note that the user of this session might have been using the widget with other purposes.</li>\n                <li ng-show="usage.slidedLevels < usage.maxLevels">To avoid confusions, the final state transition is only shown if all the levels are displayed.</li>\n            </ul>\n        </div>\n    </div>\n\n    <div class="row">\n        <div class="col-md-12">\n            <div class="stateDiagram" data="usage.data" levels-to-show="usage.selectedLevels" final-displayed="true"></div>\n        </div>\n    </div>\n</div>'),e.put("sessions-started.html",'<div ng-controller="SessionsStartedController as started">\n    <h1>Sessions started</h1>\n\n    <div class="row">\n        <div class="col-md-12">\n            <div class="barChart" chart-data="started.data"></div>\n        </div>\n    </div>\n</div>'),e.put("usage-steps.html",'<div ng-controller="UsageStatesController as usage">\n    <h1>PT Anywhere usage summary</h1>\n\n    <div class="row">\n        <div class="col-md-12" style="margin-top: 20px;">\n            <p>Number of levels shown in the chart: <span ng-bind="usage.slidedLevels"></span>.</p>\n            <div class="slider" ng-model="usage.selectedLevels" range-max="usage.maxLevels" on-slide="usage.onSlide(value)"></div>\n\n            <p>Notes to interpret the chart:</p>\n            <ul>\n                <li>If a session has less than <span ng-bind="usage.slidedLevels"></span> steps, NOOP state will be selected for the remaining levels.</li>\n                <li>If a session has more than <span ng-bind="usage.slidedLevels"></span> steps, the remaining ones will not be displayed.</li>\n                <li>For the sake of simplicity, the states have not been subdivided to consider the type of devices created, deleted or modified.</li>\n                <li>This aggregation chart does not show final states.\n                    You can check the final state for each session in the session-specific version of this chart.</li>\n            </ul>\n        </div>\n    </div>\n\n    <div class="row">\n        <div class="col-md-12">\n            <div class="stateDiagram" data="usage.data" levels-to-show="usage.selectedLevels"></div>\n        </div>\n    </div>\n</div>\n')}]);