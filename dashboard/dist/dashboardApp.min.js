/**
 * dashboardApp - A dashboard to analyse PT Anywhere usage.
 * @version v2.0.1
 * @link http://pt-anywhere.kmi.open.ac.uk
 */
function Listener(){this.callbacks={deviceCreation:null,deviceRemoval:null,deviceUpdate:null,linkCreation:null,linkRemoval:null,openCmd:null,closeCmd:null,useCmd:null,readCmd:null}}angular.module("dashboardApp",[]).config(["$injector","$provide",function(t,e){var n={baseUrl:""};for(var a in n)try{t.get(a)}catch(i){console.log('Setting default value for non existing "baseUrl" constant: "'+n[a]+'"'),e.constant(a,n[a])}}]),angular.module("dashboardApp").directive("barChart",[function(){function t(t,e){return new Chart(t,{type:"bar",data:e,options:{barPercentage:1}})}return{restrict:"C",template:'<div ng-if="chartData === null">Loading...</div><canvas style="width: 100%; height: 400px;"></canvas>',scope:{chartData:"="},link:function(e,n,a){e.chart=null,e.$watch("chartData",function(a,i){if(null!==a){var o=n.find("canvas")[0].getContext("2d");null===e.chart?e.chart=t(o,e.chartData):(e.chart.destroy(),e.chart=t(o,e.chartData))}})}}}]).directive("scatterplot",[function(){function t(t,e,n){var a=t.find(".scatter")[0],i=new vis.DataSet(e);return new vis.Graph2d(a,i,n)}return{restrict:"C",template:'<div ng-if="chartData === null">Loading...</div><div class="scatter"></div>',scope:{chartData:"=",chartOptions:"="},link:function(e,n,a){e.chart=null,e.$watch("chartData",function(a,i){null!==a&&(null===e.chart?e.chart=t(n,a,e.chartOptions):(e.chart.destroy(),e.chart=t(container,a,e.chartOptions)))})}}}]).directive("slider",[function(){function t(t,e,n){a=$(t.find("div")[0]),a.slider({range:"min",slide:e,stop:n})}function e(){return a.slider("value")}function n(t,n){var i=e();a.slider("option","min",0===t?0:1),a.slider("option","max",t),(0===i||i>t)&&(a.slider("value",t>=3?3:t),n.onChange({value:e()}))}var a;return{restrict:"C",template:"<div></div>",scope:{onSlide:"&",onChange:"&",sliderMax:"="},link:function(e,a,i){t(a,function(t,n){e.onSlide({value:n.value})},function(t,n){e.onChange({value:n.value})}),n(e.sliderMax,e),e.$watch("sliderMax",function(t,a){n(t,e)})}}}]).directive("stateDiagram",["StateDiagramHelper",function(t){return{restrict:"C",template:"<div></div>",scope:{data:"=",levelsToShow:"=",finalDisplayed:"@"},link:function(e,n,a){t.init(n.find("div")[0],"true"===e.finalDisplayed),e.$watchGroup(["data","levelsToShow"],function(e,n){t.update(e[0],e[1])})}}}]),angular.module("dashboardApp").filter("simpleUuid",[function(){function t(t){for(var e=t.toString(),n="",a=0;a<e.length;a+=2)n+=String.fromCharCode(parseInt(e.substr(a,2),16));return n}return function(e){var n=e.replace(/-/g,""),a=btoa(t(n));return a.replace(/\+/g,".").replace(/\//g,"_").replace(/=/g,"-")}}]).filter("momentDate",[function(){return function(t,e){return t.format(e)}}]),angular.module("dashboardApp").factory("UrlUtils",[function(){return{serialize:function(t){var e="";for(var n in t)e+=n+"="+t[n]+"&";return""!==e&&(e="?"+e.substring(0,e.length-1)),e}}}]).factory("TimeCache",[function(){return{getDefaultStart:function(){var t=localStorage.getItem("startISO");return null===t?moment().startOf("day"):moment(t)},getDefaultEnd:function(){var t=localStorage.getItem("endISO");return null===t?moment().endOf("day"):moment(t)},store:function(t,e){localStorage.setItem("startISO",t),localStorage.setItem("endISO",e)}}}]).factory("SessionsService",["$http","baseUrl",function(t,e){return{list:function(n){return t.get(e+"/a/data/sessions",{params:n})},getSessionCount:function(n){return t.get(e+"/a/data/sessions/counter",{params:n})},getActivityVolumePerSession:function(n){return t.get(e+"/a/data/sessions/perStatements",{params:n})},getSessionsForScatterplot:function(n){return t.get(e+"/a/data/sessions/scatterplot",{params:n})},getSessionsUsageStates:function(n){return t.get(e+"/a/data/usage",{params:n})},getSessionUsageStates:function(n){var a=[t.get(e+"/a/data/usage/"+n+"/passed"),t.get(e+"/a/data/usage/"+n)];return Promise.all(a).then(function(t){var e=t[1].data,n=t[0].data.passed?"pass":"fail",a=e.levels[e.levels.length-1][0].to,i=[{from:a,to:n,value:1,title:"1 session"}];return e.levels.push(i),e})},getStatements:function(n){return t.get(e+"/a/data/sessions/"+n)}}}]).factory("StateDiagramHelper",[function(){function t(){for(var t="0123456789ABCDEF".split(""),e="#",n=0;6>n;n++)e+=t[Math.floor(16*Math.random())];return e}function e(e,n){var a=null;i.clear();for(var o=0;n>o;o++){a=t();for(var s=0;s<e.length;s++)i.add({id:String(o)+":"+String(s),label:e[s],color:a,size:10,x:100*s,y:100*(o+1)})}return i.add({id:"init",label:"init",color:t(),x:100*(e.length-1)/2,y:0,size:10}),a=t(),i.add([{id:"pass",label:"pass",color:a,size:10,x:100*(e.length-1)/3,y:100*(n+1)},{id:"fail",label:"fail",color:a,size:10,x:200*(e.length-1)/3,y:100*(n+1)}]),i}function n(t,e){o.clear();for(var n=0;n<t.length&&e>n;n++)o.add(t[n]);return o}var a,i=new vis.DataSet,o=new vis.DataSet,s=!1;return{init:function(t,e){"undefined"!=typeof s&&(s=e);var n={nodes:i,edges:o},r={nodes:{shape:"dot",font:{face:"Tahoma"}},edges:{width:.1,smooth:{type:"continuous"},arrows:{to:{scaleFactor:.2}}},interaction:{dragNodes:!1},physics:{enabled:!1}};a=new vis.Network(t,n,r)},_getRandomColor:t,_drawStates:e,_drawEdges:n,update:function(t,i){e(t.states,i);var o=s&&i+1==t.levels.length?1:0;n(t.levels,i+o),a.fit()}}}]),String.prototype.startsWith=function(t){return 0===this.indexOf(t,0)},Listener.prototype.onCreateDevice=function(t){return this.callbacks.deviceCreation=t,this},Listener.prototype.onDeleteDevice=function(t){return this.callbacks.deviceRemoval=t,this},Listener.prototype.onUpdateDevice=function(t){return this.callbacks.deviceUpdate=t,this},Listener.prototype.onUpdatePort=function(t){return this.callbacks.portUpdate=t,this},Listener.prototype.onCreateLink=function(t){return this.callbacks.linkCreation=t,this},Listener.prototype.onDeleteLink=function(t){return this.callbacks.linkRemoval=t,this},Listener.prototype.onOpenCommandLine=function(t){return this.callbacks.openCmd=t,this},Listener.prototype.onCloseCommandLine=function(t){return this.callbacks.closeCmd=t,this},Listener.prototype.onUseCommandLine=function(t){return this.callbacks.useCmd=t,this},Listener.prototype.onReadCommandLine=function(t){return this.callbacks.readCmd=t,this},Listener.prototype.onStatement=function(t){var e=void 0===t.result?null:t.result.extensions;t.verb.id===verb.create?t.object.id.startsWith(devices.any)?null===this.callbacks.deviceCreation?console.warn("No callback function defined for device creation."):this.callbacks.deviceCreation(e):t.object.id===activity.link&&(null===this.callbacks.linkCreation?console.warn("No callback function defined for link creation."):this.callbacks.linkCreation(e)):t.verb.id===verb["delete"]?t.object.id.startsWith(devices.any)?null===this.callbacks.deviceRemoval?console.warn("No callback function defined for device removal."):this.callbacks.deviceRemoval(e):t.object.id===activity.link&&(null===this.callbacks.linkRemoval?console.warn("No callback function defined for link removal."):this.callbacks.linkRemoval(e)):t.verb.id===verb.update?t.object.id.startsWith(devices.any)?null===this.callbacks.deviceUpdate?console.warn("No callback function defined for device update."):this.callbacks.deviceUpdate(e,t.result.response):t.object.definition.type===activity.port&&(null===this.callbacks.portUpdate?console.warn("No callback function defined for device port update."):this.callbacks.portUpdate(e)):t.verb.id===verb.opened?t.object.definition.type===activity.commandLine&&(null===this.callbacks.openCmd?console.warn("No callback function defined for command line open."):this.callbacks.openCmd(t.object.definition.name["en-GB"])):t.verb.id===verb.closed?t.object.definition.type===activity.commandLine&&(null===this.callbacks.closeCmd?console.warn("No callback function defined for command line close."):this.callbacks.closeCmd()):t.verb.id===verb.use?t.object.definition.type===activity.commandLine&&(null===this.callbacks.useCmd?console.warn("No callback function defined for command line use."):this.callbacks.useCmd(e)):t.verb.id===verb.read&&t.object.definition.type===activity.commandLine&&(null===this.callbacks.readCmd?console.warn("No callback function defined for command line read."):this.callbacks.readCmd(t.result.response))},angular.module("dashboardApp").service("StatementListener",[Listener]),angular.module("dashboardApp.search",["ae-datetimepicker","dashboardApp"]).controller("SearchController",["$window","TimeCache","SessionsService","UrlUtils",function(t,e,n,a){function i(){var t=s.startTime.toISOString(),n=s.endTime.toISOString(),a={start:t,end:n};return e.store(t,n),a}function o(){var t=i();return t.minStatements=s.actionsNum,t.containsCommand=s.containsCommand,t}var s=this,r="YYYY/MM/DD HH:mm";s.startTime=e.getDefaultStart(),s.endTime=e.getDefaultEnd(),s.startTimeOptions={format:r},s.endTimeOptions={format:r,minDate:moment(s.startTime).add(1,"hours")},s.actionsNum=1,s.containsCommand="",s.sessions=[],s.getUrlParams=function(){return a.serialize(o())},s.startTimeUpdate=function(){s.endTimeOptions.minDate=moment(s.startTime).add(1,"hours"),s.endTime<s.endTimeOptions.minDate&&(s.endTime=s.endTimeOptions.minDate)},s.list=function(){n.list(o()).then(function(t){s.sessions=t.data},function(t){console.error(t)})},s.showStatesChart=function(){t.location.href="summary.html#/usage"+s.getUrlParams()},s.showSessionsStartedHistogram=function(){t.location.href="summary.html#/started"+s.getUrlParams()},s.showInteractionCountingHistogram=function(){t.location.href="summary.html#/activity"+s.getUrlParams()},s.showInteractionCountingScatterplot=function(){t.location.href="summary.html#/scatterplot"+s.getUrlParams()}}]),angular.module("dashboardApp.session",["ngRoute","dashboardApp"]).constant("ROUTES",{script:{name:"Session script",path:"/script"},states:{name:"States diagram",path:"/steps"}}).config(["$routeProvider","baseUrl","ROUTES",function(t,e,n){t.when(n.script.path,{templateUrl:e+"/static/html/session-script.html"}).when(n.states.path,{templateUrl:e+"/static/html/session-steps.html"}).otherwise({redirectTo:n.script.path})}]),angular.module("dashboardApp.session").controller("ScriptController",["SessionsService","$routeParams",function(t,e){var n=this;n.statements=[],t.getStatements(e.id).then(function(t){n.statements=t.data.statements},function(t){console.error(t)})}]),angular.module("dashboardApp.session").directive("sessionScript",["StatementListener",function(t){return{restrict:"C",template:"<ol></ol>",scope:{statements:"="},link:function(e,n,a){function i(t){var e=angular.element(t);o.append(e)}var o=n.find("ol"),s=0;t.onCreateDevice(function(t){i("<li>Creating "+t[extension.device.name]+"</li>")}).onCreateLink(function(t){var e=t[extension.endpoints];i("<li>Connecting "+e[0].device+" and "+e[1].device+"</li>")}).onDeleteDevice(function(t){i("<li>Deleting "+t[extension.device.name]+"</li>")}).onDeleteLink(function(t){var e=t[extension.endpoints];i("<li>Disconnecting "+e[0].device+" and "+e[1].device+"</li>")}).onUpdateDevice(function(t){i("<li>Updating "+t[extension.device.name]+"</li>")}).onUpdatePort(function(t){i("<li>Updating "+t[extension.device.name]+"'s port: "+t[extension.port.name]+"</li>")}).onOpenCommandLine(function(t){s++;var e="collapsedSession"+s,n='<li><a data-target="#'+e+'" data-toggle="collapse" aria-expanded="false" aria-controls="'+e+'">Using '+t+'</a><div id="'+e+'" class="collapse"><div class="well"></div></div></li>';i(n)}).onCloseCommandLine(function(){}).onUseCommandLine(function(t){}).onReadCommandLine(function(t){var e="collapsedSession"+s,a=n.find("#"+e+" .well");a.append(t)}),e.$watch("statements",function(e,n){for(var a=0;a<e.length;a++)t.onStatement(e[a])})}}}]),angular.module("dashboardApp.session").controller("SessionController",["$routeParams","$scope","ROUTES","UrlUtils",function(t,e,n,a){function i(t,e){var n=[];for(var a in t)n.push({name:t[a].name,url:"#"+t[a].path+e});return n}var o=this;o.uiid="id",o.visualizations=[],e.$on("$routeChangeSuccess",function(){o.uiid=t.id;var e=a.serialize(t);o.visualizations=i(n,e)})}]),angular.module("dashboardApp.session").controller("UsageStatesController",["$scope","$routeParams","SessionsService",function(t,e,n){var a=this;a.levels=0,a.slidedLevels=0,a.data={states:[],levels:[]},a.maxLevels=0,a.onSlide=function(e){a.slidedLevels=e,t.$$phase||t.$apply()},a.onChange=function(e){a.levels=e,a.slidedLevels=e,t.$$phase||t.$apply()},n.getSessionUsageStates(e.id).then(function(e){a.data=e,a.maxLevels=a.data.levels.length-1,t.$$phase||t.$apply()},function(t){console.error(t)})}]),angular.module("dashboardApp.summary",["ngRoute","dashboardApp"]).constant("ROUTES",{steps:{name:"Usage steps",path:"/usage"},started:{name:"Sessions started",path:"/started"},activity_count:{name:"Activity count",path:"/activity"},activity_scatterplot:{name:"Activity volume over time",path:"/scatterplot"}}).config(["$routeProvider","baseUrl","ROUTES",function(t,e,n){t.when(n.steps.path,{templateUrl:e+"/static/html/usage-steps.html"}).when(n.started.path,{templateUrl:e+"/static/html/sessions-started.html"}).when(n.activity_count.path,{templateUrl:e+"/static/html/activities-count.html"}).when(n.activity_scatterplot.path,{templateUrl:e+"/static/html/activities-scatterplot.html"}).otherwise({redirectTo:n.started.path}),Chart.defaults.global.elements.line.backgroundColor="rgba(151,187,205,0.8)",Chart.defaults.global.elements.rectangle.backgroundColor="rgba(151,187,205,0.7)",Chart.defaults.global.legend.display=!1}]),angular.module("dashboardApp.summary").controller("SummaryController",["$routeParams","$scope","ROUTES","UrlUtils",function(t,e,n,a){function i(t,e){var n=[];for(var a in t)n.push({name:t[a].name,url:"#"+t[a].path+e});return n}var o=this;e.$on("$routeChangeSuccess",function(){var e=a.getUrlParams(t);o.charts=i(n,e)})}]).controller("SessionsStartedController",["$routeParams","SessionsService",function(t,e){function n(t,e){for(var n=[],a=0;e>a;a++)n.push(t.format("MM/DD/YYYY HH")),t.add(1,"hours");return n}function a(t,e){return{labels:n(t,e.length),datasets:[{label:"Sessions started",data:e}]}}var i=this;i.data=null,e.getSessionCount(t).then(function(t){i.data=a(moment(t.data.start),t.data.values)},function(t){console.error(t)})}]).controller("ActivityCountController",["$routeParams","SessionsService",function(t,e){function n(t){for(var e=[],n=1;t>=n;n++)e.push(n);return e}function a(t){return{labels:n(t.length),datasets:[{label:"Sessions with this amount of activities",data:t}]}}var i=this;i.data=null,e.getActivityVolumePerSession(t).then(function(t){i.data=a(t.data)},function(t){console.error(t)})}]).controller("ActivityScatterplot",["$routeParams","SessionsService",function(t,e){var n=this;n.sessions=null,n.options={sort:!1,sampling:!1,style:"points",dataAxis:{showMinorLabels:!1,left:{title:{text:"Number of interactions"}},right:{title:{text:"Session starting time"}}},drawPoints:{enabled:!0,size:6,style:"circle"},defaultGroup:"Scatterplot"},e.getSessionsForScatterplot(t).then(function(t){for(var e=t.data,a=0;a<e.length;a++)e[a].x=moment(e[a].x);n.sessions=e},function(t){console.error(t)})}]).controller("UsageStatesController",["$scope","$routeParams","SessionsService",function(t,e,n){var a=this;a.levels=0,a.slidedLevels=0,a.data={states:[],levels:[]},a.maxLevels=0,a.onSlide=function(e){a.slidedLevels=e,t.$$phase||t.$apply()},a.onChange=function(e){a.levels=e,a.slidedLevels=e,t.$$phase||t.$apply()},n.getSessionsUsageStates(e).then(function(e){a.data=e.data,a.maxLevels=a.data.levels.length,t.$$phase||t.$apply()},function(t){console.error(t)})}]);