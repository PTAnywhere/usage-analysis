<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <groupId>uk.ac.open.kmi.forge.ptAnywhere.analyse</groupId>
    <artifactId>ptAnywhere-analyser</artifactId>
    <packaging>war</packaging>
    <version>2.0.1</version>
    <name>PTAnywhere analyser</name>


    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <env>devel</env>  <!-- Default environment: development. -->
        <propFile>null</propFile>
        <property-file.path.default>${project.basedir}/src/main/resources</property-file.path.default>
    </properties>

    <build>
        <finalName>analysis</finalName>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>2.5.1</version>
                <inherited>true</inherited>
                <configuration>
                    <source>1.6</source>
                    <target>1.6</target>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>1.4.0</version>
                <configuration>
                    <executable>mvn</executable>
                    <arguments>
                        <!-- To ensure that the properties are loaded before the redeploy without
                            making the goal dependant of any phase (e.g., clean). -->
                        <argument>properties:read-project-properties</argument>
                        <argument>tomcat7:redeploy</argument>
                        <argument>-Denv=${env}</argument>
                        <argument>-Dcustom.propFile=${propFile}</argument>
                    </arguments>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>properties-maven-plugin</artifactId>
                <version>1.0-alpha-2</version>
                <configuration>
                    <files>
                        <file>${property-file}</file>
                    </files>
                    <outputFile/>
                    <properties/>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.tomcat.maven</groupId>
                <artifactId>tomcat7-maven-plugin</artifactId>
                <version>2.2</version>
                <configuration>
                    <url>${tomcat.url}</url>
                    <server>${tomcat.server}</server>
                    <path>${tomcat.path}</path>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-antrun-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>test</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <tasks>
                                <delete file="${project.build.outputDirectory}/environment.properties"/>
                                <copy file="${property-file}"
                                      tofile="${project.build.outputDirectory}/environment.properties"/>
                                <copy file="dashboard/dist/dashboardApp.min.js"
                                      tofile="${project.build.directory}/analysis/static/js/dashboardApp.min.js"/>
                                <copy todir="${project.build.directory}/analysis/static/js/vendors">
                                    <fileset dir="dashboard/scripts/tmp/vendors" />
                                </copy>
                            </tasks>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>com.github.eirslett</groupId>
                <artifactId>frontend-maven-plugin</artifactId>
                <version>1.0</version>

                <configuration>
                    <workingDirectory>dashboard/scripts</workingDirectory>
                </configuration>

                <executions>
                    <execution>
                        <id>install node and npm</id>
                        <goals>
                            <goal>install-node-and-npm</goal>
                        </goals>
                        <configuration>
                            <nodeVersion>v5.3.0</nodeVersion>
                            <npmVersion>3.3.12</npmVersion>
                        </configuration>
                    </execution>

                    <execution>
                        <id>npm install</id>
                        <goals>
                            <goal>npm</goal>
                        </goals>
                        <!-- Optional configuration which provides for running any npm command -->
                        <configuration>
                            <arguments>install</arguments>
                        </configuration>
                    </execution>

                    <execution>
                        <id>bower install</id>
                        <goals>
                            <goal>bower</goal>
                        </goals>
                        <configuration>
                            <arguments>install</arguments>
                        </configuration>
                    </execution>

                    <execution>
                        <id>gulp build</id>
                        <goals>
                            <goal>gulp</goal>
                        </goals>
                    </execution>

                    <!-- Karma tests not specified here because they are run by Gulp -->

                </executions>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>env-development</id>
            <!-- Activated by default or when -Denv=devel is given as parameter. -->
            <activation>
                <!-- Note: this seems redundant as I already set it as the default value in the properties section. -->
                <activeByDefault>true</activeByDefault>
                <property>
                    <name>env</name>
                    <value>devel</value>
                </property>
            </activation>
            <properties>
                <property-file>${property-file.path.default}/environment.dev.properties</property-file>
            </properties>
        </profile>
        <profile>
            <id>env-testing</id>
            <!-- Activated when -Denv=test is given as parameter. -->
            <activation>
                <property>
                    <name>env</name>
                    <value>test</value>
                </property>
            </activation>
            <properties>
                <property-file>${property-file.path.default}/environment.test.properties</property-file>
            </properties>
        </profile>
        <profile>
            <id>env-production</id>
            <!-- Activated when -Denv=prod is given as parameter. -->
            <activation>
                <property>
                    <name>env</name>
                    <value>prod</value>
                </property>
            </activation>
            <properties>
                <property-file>${property-file.path.default}/environment.properties</property-file>
            </properties>
        </profile>
        <profile>
            <id>env-customizable</id>
            <!-- Activated by default or when -Denv=custom is given as parameter. -->
            <activation>
                <property>
                    <name>env</name>
                    <value>custom</value>
                </property>
            </activation>
            <properties>
                <property-file>${custom.propFile}</property-file>
            </properties>
        </profile>
    </profiles>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.glassfish.jersey</groupId>
                <artifactId>jersey-bom</artifactId>
                <version>2.22.1</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>org.glassfish.jersey.containers</groupId>
            <!-- <artifactId>jersey-container-servlet-core</artifactId>-->
            <!-- use the following artifactId if you don't need servlet 2.x compatibility -->
            <artifactId>jersey-container-servlet</artifactId>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.media</groupId>
            <artifactId>jersey-media-moxy</artifactId>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.media</groupId>
            <artifactId>jersey-media-json-processing</artifactId>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.ext</groupId>
            <artifactId>jersey-mvc-freemarker</artifactId>
        </dependency>
        <dependency>
            <groupId>org.glassfish.main.extras</groupId>
            <artifactId>glassfish-embedded-web</artifactId>
            <scope>provided</scope>
            <version>4.1.1</version>
        </dependency>
        <dependency>
            <groupId>org.codehaus.jettison</groupId>
            <artifactId>jettison</artifactId>
            <version>1.3.7</version>
        </dependency>
        <dependency>
            <groupId>commons-codec</groupId>
            <artifactId>commons-codec</artifactId>
            <version>1.10</version>
        </dependency>
        <dependency>
            <groupId>commons-logging</groupId>
            <artifactId>commons-logging</artifactId>
            <version>1.2</version>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-core</artifactId>
            <version>2.3</version>
        </dependency>

        <!-- TinCanJava library locally installed, hopefully it will be updated to a Maven repo soon. -->
        <dependency>
            <groupId>com.rusticisoftware</groupId>
            <artifactId>tincan</artifactId>
            <version>0.8.1-SNAPSHOT</version>
        </dependency>
        <!-- TinCanJava's dependencies, hopefully this won't be needed soon. -->
        <dependency>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-client</artifactId>
            <version>9.3.6.v20151106</version>
        </dependency>

        <!-- Frontend: Dashboard app -->
        <dependency>
            <groupId>com.github.eirslett</groupId>
            <artifactId>frontend-plugin-core</artifactId>
            <version>1.0</version>
        </dependency>
    </dependencies>

</project>
